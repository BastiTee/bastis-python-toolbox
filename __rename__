#!/bin/bash
cd "$( cd "$( dirname "$0" )"; pwd )"

base_name="my_module"
base_port=9690

function help {
    [ $# -ge 1 ] && echo "$1"
    cat << EOF

Usage:
        $( basename $0 ) -n NEW_NAME -p NEW_PORT (-r)

Options:
        -n NEW_NAME      Your desired module name replacing 'my_module'
        -p NEW_PORT      Your desired flask port replacing 9690
        -r               Reverse renaming

EOF
    exit 1
}

while getopts "n:p:r" opt; do
    case "$opt" in
    n) target_name=$OPTARG;;
	p) target_port=$OPTARG;;
    r) reverse=1;;
	*) help;;
	esac
done

[ -z "$target_name" ] && help "Target name unset."
[ -z "$target_port" ] && help "Target port unset."

# Check for reversal
if [ ! -z "$reverse" ]; then
    target_name_org=$target_name
    target_name=$base_name
    base_name=$target_name_org
    target_port_org=$target_port
    target_port=$base_port
    base_port=$target_port_org
fi
cat << EOF
---
$base_name >> $target_name
$base_port >> $target_port
---
EOF

function run_rename {
    # We have to check for the OS here since sed in-place works
    # slighty different on linux und mac
    if [ "$( uname )" == "Darwin" ]; then
        sed -i '' -e "s/$1/$2/g" $3
    else
        sed -i'' -e "s/$1/$2/g" $3
    fi
}

if [ -z "$reverse" ]; then
    # Forward: Clean all untracked files and rename folder
    ./make clean
    mv "$base_name" "$target_name"
else
    # Reverse: Rename the folder (so it's tracked again) and then wipe...
    mv "$base_name" "$target_name"
    ./make clean
fi

# Rename module name
grep -ilr $base_name --exclude-dir=.git --exclude=__rename__ . |\
while read file; do run_rename $base_name $target_name $file; done

# Rename target port
grep -ilr $base_port --exclude-dir=.git --exclude=__rename__ . |\
while read file; do run_rename $base_port $target_port $file; done

echo "Done."
